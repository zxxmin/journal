@mixin type($cls) {
    @if ($cls == 'HdL') {
        font-size: 2.4rem;
        font-weight: 700;
        color: $grayColor3;
    } @else if ($cls == 'HdS') {
        font-size: 2rem;
        font-weight: 700;
        color: $grayColor3;
    } @else if ($cls == 'PrL') {
        font-size: 1.6rem;
        font-weight: 400;
        color: $grayColor3;
    }@else if ($cls == 'PrS') {
        font-size: 1.4rem;
        font-weight: 400;
        color: $grayColor3;
    }
}

// @include type('HdXL');
@mixin customScroll {
    &::-webkit-scrollbar {
        width: 6px;
        height: 6px;
        box-sizing: border-box;
    }
    &::-webkit-scrollbar-thumb {
        background-color: rgba($black, 0.1);
        border-radius: 3px;
    }
    &::-webkit-scrollbar-track {
        width: 16px;
        background-color: transparent;
    }
}

@mixin hideElement {
    position: absolute;
    width: 0.1rem;
    height: 0.1rem;
    margin: -0.1rem;
    overflow: hidden;
    clip-path: polygon(0 0, 0 0, 0 0);
}

//text-ellipsis
// 한줄ex : @include ellipsis(1);
// 두줄이상ex : @include ellipsis(2,1.5,3);
@mixin ellipsis($line , $line-height:1.25) {
	@if ($line == 1) {
		text-overflow:ellipsis;
		white-space:nowrap;
		word-wrap:normal;
		width:100%;
		overflow:hidden;
	} @else {
		display: -webkit-box;
		overflow: hidden;
		line-height: $line-height;
		width: 100%;
		text-overflow: ellipsis;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $line;
	}
}

@mixin transition($property, $duration:0.3s, $delay:0s, $tf:linear) {
    transition-property: $property;
    transition-duration: $duration;
    transition-delay: $delay;
    transition-timing-function: $tf;
}

$breakpoints: (
  'pcLg': (min-width: $pc-lg),
  'pc': (max-width: $pc),
  'pcSm': (max-width: $pc-sm),
  'tablet': (max-width: $tablet),
  'tabletSm': (max-width: $tablet-sm),
  'mobile': (max-width: $mobile),
  'mobileSm': (max-width: $mobile-sm),
  'mobileXsm': (max-width: $mobile-xsm),
  'portrait': (orientation: portrait) and (max-width: 1023px) 
);

@mixin responsive($breakpoint) {
    $raw-query: map-get($breakpoints, $breakpoint);

    @if $raw-query {
        $query: if(
            type-of($raw-query) == 'string',
            unquote($raw-query),
            inspect($raw-query)
        );

        @media #{$query} {
            @content;
        }
    } 
}